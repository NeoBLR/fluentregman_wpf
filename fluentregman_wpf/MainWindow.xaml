<Window x:Class="fluentregman_wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:fluentregman_wpf"
        xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
        mc:Ignorable="d"
        fw:AcrylicWindow.NoiseOpacity="0"
        fw:AcrylicWindow.TintOpacity="1"
        fw:AcrylicWindow.AcrylicWindowStyle="None"
        fw:AcrylicWindow.TintColor="#7F1C1A32"
        fw:AcrylicWindow.FallbackColor="#7F1C1A32"  
        WindowStyle="None"
        BorderThickness="0"
        x:Name="WindowMain"
        Style="{DynamicResource winreg}"
        fw:AcrylicWindow.Enabled="True"
        Title="Главная)" Height="350" Width="525" MinHeight="350" MinWidth="525" Icon=".\img\icon.png"  >
    <Window.Resources>
        <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <Grid>
                    <AdornerDecorator>
                        <ContentPresenter/>
                    </AdornerDecorator>
                    <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                        <Condition Property="WindowState" Value="Normal"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="winreg" TargetType="{x:Type Window}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <AdornerDecorator>
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                    <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="WinStyle" TargetType="{x:Type Window}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <AdornerDecorator>
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                    <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <StackPanel>
        <Grid Height="25" MouseDown="Win_MouseDown" MouseLeftButtonDown="toolbar_MouseLeftButtonDown">

            <Rectangle RadiusX="5" RadiusY="5" Height="50" Margin="0">
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="1,0">
                        <GradientStop Color="#FFFFE53B" Offset="0"/>
                        <GradientStop Color="#FFFC007A" Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="7*"/>
                    
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="50"/>
                </Grid.ColumnDefinitions>

                <Rectangle  x:Name="RecShow" Fill="White" Opacity="0" Grid.Column="1"  MouseDown="ShowBtn_MouseDown"  Panel.ZIndex="3"></Rectangle>

                <Rectangle Grid.Column="1" Fill="White" Panel.ZIndex="1">
                    <Rectangle.Style>
                        <Style TargetType="{x:Type Rectangle}">
                            <Setter Property="Opacity" Value="0"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=RecShow}" Value="True">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                </Rectangle>

                <Image Grid.Column="1" x:Name="ShowBtn" Height="20" Width="20" Margin="0 0 3 0" Panel.ZIndex="2">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/img/toolbar_show_off.png"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=RecShow}" Value="True">
                                    <Setter Property="Source" Value="/img/toolbar_show.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>

                <Rectangle  x:Name="HideShow" Fill="White" Opacity="0" Grid.Column="2"  MouseDown="HideBtn_MouseDown"  Panel.ZIndex="3"></Rectangle>

                <Rectangle Grid.Column="2" Fill="White" Panel.ZIndex="1">
                    <Rectangle.Style>
                        <Style TargetType="{x:Type Rectangle}">
                            <Setter Property="Opacity" Value="0"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=HideShow}" Value="True">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                </Rectangle>

                <Image Grid.Column="2" x:Name="HideBtn" Height="20" Width="20" Margin="0 0 3 0" Panel.ZIndex="2">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/img/toolbar_hide_off.png"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=HideShow}" Value="True">
                                    <Setter Property="Source" Value="/img/toolbar_hide.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>

                <Rectangle  x:Name="CloseShow" Fill="White" Opacity="0" Grid.Column="3"  MouseDown="CloseBtn_MouseDown"  Panel.ZIndex="3"></Rectangle>

                <Rectangle Grid.Column="3" Fill="White" Panel.ZIndex="1">
                    <Rectangle.Style>
                        <Style TargetType="{x:Type Rectangle}">
                            <Setter Property="Opacity" Value="0"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=CloseShow}" Value="True">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                </Rectangle>

                <Image Grid.Column="3" x:Name="CloseBtn" Height="20" Width="20" Margin="0 0 3 0" Panel.ZIndex="2">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/img/toolbar_closed_off.png"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=CloseShow}" Value="True">
                                    <Setter Property="Source" Value="/img/toolbar_closed.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>

            </Grid>
            <Label x:Name="TitleWinL" Content="{Binding Title, ElementName=WindowMain}" HorizontalAlignment="Center" Foreground="White" />
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>


            <Frame x:Name="MainFrame" NavigationUIVisibility="Hidden" Grid.Column="2" />
        </Grid>
    </StackPanel>
</Window>
